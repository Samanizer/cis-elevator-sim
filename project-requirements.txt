Project Title: Elevator Simulation in C++

Course: Intermediate C++ Programming University Inspiration: University of Waterloo Project Type: Team Project (up to 3 students)

Project Overview:

In this project, your team will design and implement a simulation of an elevator system using C++. The simulation should model the behavior of a multi-floor building with one or more elevators, handling user requests, managing elevator movement, and simulating real-time actions. The main goal is to practice object-oriented programming (OOP), system design, and interactive console input/output.

Learning Objectives:

Apply object-oriented principles (classes, inheritance, polymorphism).
Practice modular design and system decomposition.
Implement time-based or event-driven simulations.
Strengthen skills in C++ syntax, control flow, and basic file I/O.
Team Guidelines:


Functional Requirements:

Building Configuration:
Configurable number of floors (e.g., 5 to 20).
One or more elevators.
Elevator Behavior:
Moves up/down between floors.
Responds to user requests (floor buttons and external up/down calls).
Opens/closes doors.
Can be idle if no requests.
Request System:
Simulate people pressing buttons on different floors.
Handle multiple requests efficiently.
Console Interface:
Display current state of elevators (floor, direction, status).
Allow user to input requests during runtime.
Timing/Simulation:
Time-based or step-based simulation.
Delays between actions for realism.

Optional Enhancements (Bonus):

Prioritize requests based on proximity or direction.
Add capacity limits to elevators.
Implement a basic GUI using a library like SFML or ncurses (optional).
Add elevator sound or floor announcements.
Deliverables:

Source code in C++ (with comments).
A README file explaining:
How to compile and run the simulation
Team members and their roles
Features implemented
A short demo video (max 3 minutes) showing the simulation in action.